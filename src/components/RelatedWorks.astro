---
// RelatedWorks.astro - 用于显示相关作品并提升内部链接
import { localdb as db } from "@/database/localdb";
import { table_works } from "@/database/schema_sqlite";
import { eq, ne, desc, sql } from "drizzle-orm";
import { Card, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";

export interface Props {
  workId: string | number;
  authorId: string | number;
  dynasty: string;
  limit?: number;
}

const { workId, authorId, dynasty, limit = 8 } = Astro.props;

// 获取同一作者的其他作品
const sameAuthorWorks = await db
  .select()
  .from(table_works)
  .where(
    sql`${table_works.author_id} = ${authorId} AND ${table_works.id} != ${workId}`
  )
  .orderBy(desc(table_works.show_order))
  .limit(limit / 2);

// 获取同一朝代的热门作品
const sameDynastyWorks = await db
  .select()
  .from(table_works)
  .where(
    sql`${table_works.dynasty} = ${dynasty} AND ${table_works.author_id} != ${authorId} AND ${table_works.id} != ${workId}`
  )
  .orderBy(desc(table_works.show_order))
  .limit(limit / 2);

// 合并作品列表
const relatedWorks = [...sameAuthorWorks, ...sameDynastyWorks];
---

<div class="mt-10">
  <h3 class="text-xl font-semibold mb-4">相关作品推荐</h3>
  <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4">
    {
      relatedWorks.map((work) => (
        <a
          href={`/works/${work.id}`}
          class="animated-underline no-underline hover:text-primary"
          title={`${work.title} - ${work.author}`}
        >
          <Card className="hover:bg-gray-100 dark:hover:bg-gray-800 transition duration-150 ease-in-out h-full">
            <CardHeader>
              <CardTitle className="text-sm line-clamp-1">
                {work.title}
                {work.quotes_count >= 2 && ` 🔥`}
              </CardTitle>
              <CardDescription className="pt-2 text-sm line-clamp-1">
                {work.dynasty} - {work.author}
              </CardDescription>
            </CardHeader>
          </Card>
        </a>
      ))
    }
  </div>
</div> 